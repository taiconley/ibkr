As of July6th, use regular docker compose build --no-cache
and docker compose up to get access to GPU. 

The below instructions are no longer needed


1) Run sudo docker context use default
2) run docker compose without jupyter
3) get the network with docker network ls
            It appears the current network is called ibkr_default
4) build the image: sudo docker build -t my-jupyter-gpu-ibkr . --no-cache
5) seperately run the sudo nvidia-docker run --gpus all --privileged --network=ibkr_default -p 8888:8888 -v /home/taiconley/Desktop/Projects/ibkr:/ibkr --name=my-jupyter-gpu-ibkr-container my-jupyter-gpu-ibkr             
remove the container: sudo docker rm my-jupyter-gpu-ibkr-container


use this to connect to container
docker exec -it <container_name_or_id> /bin/bash
to leave, type exit and shift enter (or just enter)

If I need to add the docker alias:
alias docker='docker -H unix:///var/run/docker.sock'

docker ps: This command lists all the running containers. Add the -a option to see all containers, not just the running ones.

docker stats: This command displays a live stream of container performance metrics including CPU usage, memory usage, network I/O, disk I/O, etc.

docker logs <container_id>: This command shows the logs for a specific container. Replace <container_id> with your container's ID. You can also use the --follow option to continuously stream new log entries.

docker top <container_id>: This command shows the running processes in a specific container.

docker inspect <container_id>: This command shows all the details about a container's configuration and state.

docker images: This command lists all the Docker images on your host.

If you prefer a GUI, there are some open-source projects that you can consider:

Portainer (https://www.portainer.io/): Portainer makes it easier to manage your Docker containers, it allows you to manage containers, images, networks, and volumes from the web-based Portainer dashboard.

Cockpit (https://cockpit-project.org/): Cockpit is a server manager that makes it easy to administer your GNU/Linux servers via a web browser. It also has a Docker module.

Kitematic (https://kitematic.com/): Kitematic is a simple application for managing Docker containers on Mac, Linux and Windows.

Note: When using any third-party tool, always consider the security implications and make sure that the tool is from a reliable source.


Position: This is the rank of the bid or offer in the order book. In your example, position 0 would be the best (highest) bid or (lowest) offer, position 1 would be the second best, and so on. So, these represent different price levels in the order book.

Operation: This indicates the type of operation performed on the order book. In Interactive Brokers' API, operation types are typically defined as follows:

0 = Insert (A new order at the position)
1 = Update (An update to an existing order at the position)
2 = Delete (An order was deleted from the position)
Side: This indicates whether the entry in the order book is a bid (buy order) or an offer (sell order).

0 = Bid
1 = Ask

price_0_0_0
first column is position
second column is operation
third column is Side